<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<configSections>
		<section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging" />
		<section name="instrumentationConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Common.Instrumentation.Configuration.InstrumentationConfigurationSection, Microsoft.Practices.EnterpriseLibrary.Common" />
	</configSections>

	<instrumentationConfiguration performanceCountersEnabled="true" eventLoggingEnabled="true" wmiEnabled="true" />

	<loggingConfiguration tracingEnabled="true" defaultCategory="MockCategoryOne">
		<logFilters>
			<add
				name="Category"
				type="Microsoft.Practices.EnterpriseLibrary.Logging.Filters.CategoryFilter, Microsoft.Practices.EnterpriseLibrary.Logging"
				categoryFilterMode="AllowAllExceptDenied">
				<categoryFilters>
					<add name="MyDeniedCategory" />
					<add name="MyDeniedCategory2" />
					<add name="MyDeniedCategory3" />
					<add name="bad operation" />
				</categoryFilters>
			</add>
			<add
				name="Priority"
				type="Microsoft.Practices.EnterpriseLibrary.Logging.Filters.PriorityFilter, Microsoft.Practices.EnterpriseLibrary.Logging"
				minimumPriority="5"
					/>
		</logFilters>

    <categorySources>
			<add 
				name="cat1"
				switchValue="Off">
				<listeners>
					<add name="sharedMockListener" />
				</listeners>
			</add>
			<add 
				name="cat2"
				switchValue="Off">
				<listeners>
					<add name="sharedMockListener" />
				</listeners>
			</add>
      <add 
        name="ConsoleCategory"
        switchValue="Off">
        <listeners>
          <add name="ConsoleListener" />
        </listeners>
      </add>
			<add 
				name="MockCategoryOne"
				 switchValue="Verbose">
				<listeners>
					<add name="sharedMockListener" />
				</listeners>
			</add>
			<add 
				name="MockCategoryMany" 
				switchValue="Verbose">
				<listeners>
					<add name="sharedMockListener" />
					<add name="sharedMockListener2" />
				</listeners>
			</add>
			<add
				name="FormattedCategory"
				switchValue="All">
				<listeners>
					<add name="SimpleTextFormatEventLog" />
				</listeners>
			</add>
			<add
				name="DictionaryCategory"
				switchValue="All">
				<listeners>
					<add name="DictionaryFormatEventLog" />
				</listeners>
			</add>
			<add
				name="DictionaryCategoryForFlatFile"
				switchValue="All">
				<listeners>
					<add name="DictionaryFormatFlatFile" />
				</listeners>
			</add>
			<add
				name="AppTest"
				switchValue="All">
				<listeners>
					<add name="ApplicationLog" />
				</listeners>
			</add>
			<add
				name="operation"
				switchValue="All">
				<listeners>
					<add name="sharedMockListener" />
				</listeners>
			</add>
			<add
				name="nested operation"
				switchValue="All">
				<listeners>
					<add name="sharedMockListener" />
				</listeners>
			</add>
			<add
        name="RealCategoryMany" 
				switchValue="Verbose">
				<listeners>
					<add name="DictionaryFormatFlatFile" />
					<add name="DictionaryFormatEventLog" />
				</listeners>
			</add>
		</categorySources>

		<specialSources>
			<errors name="errors" switchValue="All">
				<listeners>
					<add name="errorsMockListener" />
				</listeners>
			</errors>
		</specialSources>

    <listeners>
      <add name="sharedMockListener" 
				type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.Tests.MockTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging.Tests" 
				listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Tests.TraceListeners.MockTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging.Tests" 
				/>
			<add name="sharedMockListener2" 
				type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.Tests.MockTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging.Tests" 
				listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Tests.TraceListeners.MockTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging.Tests" 
				/>
			<add name="errorsMockListener" 
				type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.Tests.ErrorsMockTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging.Tests" 
				listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Tests.TraceListeners.MockTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging.Tests" 
				/>
			<add name="SimpleTextFormatEventLog" 
				type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging" 
				listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" 
				source="EntLib Tests" 
				formatter="SimpleTextFormat"
				/>
			<add name="DictionaryFormatEventLog" 
				type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging" 
				listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" 
				source="EntLib Tests" 
				formatter="DictionaryFormat"
				/>
			<add name="DictionaryFormatFlatFile" 
				type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging" 
				listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" 
				fileName="FlatFileTestOutput\\EntLibLog.txt" 
				header="----------header------------------" 
				footer="----------footer------------------" 
				formatter="DictionaryFormat"
				/>
			<add name="ApplicationLog" 
				type="System.Diagnostics.EventLogTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" 
				listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.SystemDiagnosticsTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" 
				initializeData="EntLib Tests" 
				/>
      <add name="ConsoleListener"
           type="System.Diagnostics.ConsoleTraceListener,System,Version=2.0.0.0,Culture=neutral, PublicKeyToken=b77a5c561934e089"
           listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.SystemDiagnosticsTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging"
       />
    </listeners>

    <formatters>
			<add
				name="XmlFormat"
				type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging"
				template="&lt;EntLibLog&gt;{newline}{tab}&lt;message&gt;{message}&lt;/message&gt;{newline}{tab}&lt;timestamp&gt;{timestamp}&lt;/timestamp&gt;{newline}{tab}&lt;title&gt;{title}&lt;/title&gt;{newline}&lt;/EntLibLog&gt;" 
				/>
			<add
				name="SimpleTextFormat"
				type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging"
				template="{timestamp}: {title}{newline}{newline}{message}"
				/>
			<add
				name="CustomTextFormat" 
				type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging"
				template="Timestamp: {timestamp}{newline}Title: {title}{newline}{newline}Acme Field1: {field1}{newline}Acme Field2: {field2}{newline}Acme Field3: {field3}{newline}{newline}Message: {message}"
				/>
			<add 
				name="DictionaryFormat"
				type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging"
				template="Timestamp: {timestamp}{newline}Title: {title}{newline}{newline}Message: {message}{newline}{newline}Extended Properties:{newline}{dictionary(Key: {key}{tab}{tab}Value: {value}{newline})}"
				/>
			<add 
				name="WrappingFormat"
				type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging"
				template="BEGIN{message}END"
				/>
		</formatters>
	</loggingConfiguration>

	<system.diagnostics>
		<sources>
			<source name="customProvider">
				<listeners>
					<add
						name="listener"
						type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.Tests.MockCustomTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging.Tests"
						initializeData="custom initialization data"
						attribute="value"/>
				</listeners>
			</source>
		</sources>
	</system.diagnostics>
</configuration>