//===============================================================================
// Microsoft patterns & practices Enterprise Library
// Logging Application Block QuickStart
//===============================================================================
// Copyright © Microsoft Corporation.  All rights reserved.
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY
// OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT
// LIMITED TO THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
// FITNESS FOR A PARTICULAR PURPOSE.
//===============================================================================

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.26
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LoggingQuickStart.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LoggingQuickStart.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This scenario demonstrates how to determine if an event will be logged based upon the configured filters..
        /// </summary>
        internal static string CheckFilterStartMessage {
            get {
                return ResourceManager.GetString("CheckFilterStartMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The quick start has logged an event by using a custom trace listener. Please check on the debugger&apos;s output for more details on the logged event..
        /// </summary>
        internal static string CustomizedSinkEndMessage {
            get {
                return ResourceManager.GetString("CustomizedSinkEndMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scenario logs information to a custom trace listener. .
        /// </summary>
        internal static string CustomizedSinkStartMessage {
            get {
                return ResourceManager.GetString("CustomizedSinkStartMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event logged by Debug Sink:
        ///	Event ID: {0}
        ///	Message: &quot;{1}&quot;..
        /// </summary>
        internal static string DebugSinkMessage {
            get {
                return ResourceManager.GetString("DebugSinkMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This message should be displayed by the debugger..
        /// </summary>
        internal static string DebugSinkTestMessage {
            get {
                return ResourceManager.GetString("DebugSinkTestMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The category &quot;General&quot; sends log information to the event log by default. Please go to event viewer to see the logged information..
        /// </summary>
        internal static string DefaultCategoryMessage {
            get {
                return ResourceManager.GetString("DefaultCategoryMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The event with EventId {0} has been processed by the Logging and Instrumentation Application Block.
        ///
        ///The default QuickStart configuration includes listeners to log event information to the application event log, the trace.log text file, and the Visual Studio Output Window. .
        /// </summary>
        internal static string EventProcessedMessage {
            get {
                return ResourceManager.GetString("EventProcessedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Quick Start has finished logging the extra information. The default configuration of the Quick Starts sends the entries to the event log..
        /// </summary>
        internal static string ExtraInformationEndMessage {
            get {
                return ResourceManager.GetString("ExtraInformationEndMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This scenario is logging extra information to the destination specified by the default category. .
        /// </summary>
        internal static string ExtraInformationStartMessage {
            get {
                return ResourceManager.GetString("ExtraInformationStartMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A category is required.
        /// </summary>
        internal static string InvalidCategoryMessage {
            get {
                return ResourceManager.GetString("InvalidCategoryMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have entered some invalid information. Please correct the following before proceeding:
        ///
        ///.
        /// </summary>
        internal static string InvalidDataMessage {
            get {
                return ResourceManager.GetString("InvalidDataMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event ID must be numeric
        ///.
        /// </summary>
        internal static string InvalidEventIDMessage {
            get {
                return ResourceManager.GetString("InvalidEventIDMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Priority must be numeric
        ///.
        /// </summary>
        internal static string InvalidPriorityMessage {
            get {
                return ResourceManager.GetString("InvalidPriorityMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following log entry information will be submitted to the Logging and Instrumentation Application Block:
        ///
        ///{0}.
        /// </summary>
        internal static string LogEventStartMessage {
            get {
                return ResourceManager.GetString("LogEventStartMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Logging Application Block Quick Start.
        /// </summary>
        internal static string QuickStartTitleMessage {
            get {
                return ResourceManager.GetString("QuickStartTitleMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sink failed because: {0}..
        /// </summary>
        internal static string SinkFailureMessage {
            get {
                return ResourceManager.GetString("SinkFailureMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Quick Start has finished executing the tracing scenario. The default configuration of the Quick Starts sends the trace messages to the flat file sink and logs the troubleshooting message to the event log. Please examine the file {0} for the trace information..
        /// </summary>
        internal static string TraceDoneMessage {
            get {
                return ResourceManager.GetString("TraceDoneMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Quick Start is using the Tracer class to trace activities and log context information. The following call stack will be traced:
        ///
        ///  traceButton_Click
        ///      DoDataAccess
        ///          DoTroubleshooting
        ///.
        /// </summary>
        internal static string TraceStartMessage {
            get {
                return ResourceManager.GetString("TraceStartMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The category &quot;Trace&quot; sends log information to the file {0} by default. Please examine this file to see if the information was logged..
        /// </summary>
        internal static string TracingCategoryMessage {
            get {
                return ResourceManager.GetString("TracingCategoryMessage", resourceCulture);
            }
        }
    }
}
