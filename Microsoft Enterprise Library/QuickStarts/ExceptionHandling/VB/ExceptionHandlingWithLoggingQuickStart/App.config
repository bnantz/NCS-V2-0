<configuration>
	<configSections>
		<section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" />
		<section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging" />
	</configSections>
	<exceptionHandling>
		<exceptionPolicies>
			<add name="Global Policy">
				<exceptionTypes>
					<add name="Exception" type="System.Exception, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="None">
						<exceptionHandlers>
							<add name="Application Message Handler" type="ExceptionHandlingWithLoggingQuickStart.AppMessageExceptionHandler, ExceptionHandlingWithLoggingQuickStart"/>
						</exceptionHandlers>
					</add>
				</exceptionTypes>
			</add>
			<add name="Log Only Policy">
				<exceptionTypes>
					<add name="Exception" type="System.Exception, mscorlib" postHandlingAction="None">
						<exceptionHandlers>
							<add 
								logCategory="Default Category" 
								eventId="100" 
								severity="Error" 
								title="Quick Start Application Exception"
								priority="0"
								formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" 
								name="Logging Handler"
								type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging"
							/>
						</exceptionHandlers>
					</add>
				</exceptionTypes>
			</add>
			<add name="Notify Policy">
				<exceptionTypes>
					<add name="BusinessLayerException" type="ExceptionHandlingQuickStart.BusinessLayer.BusinessLayerException, ExceptionHandlingQuickStart.BusinessLayer" postHandlingAction="ThrowNewException">
						<exceptionHandlers>
              <add 
								logCategory="Default Category" 
								eventId="100" 
								severity="Error" 
								title="Enterprise Library Exception Handling"
								priority="0"
								formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" 
								name="Logging Handler"
								type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging"
							/>
							<add name="Replace Handler" 
								type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" 
								exceptionMessage="An error occurred while processing your request. Please contact technical support using the following identifier: {handlingInstanceID}" 
								replaceExceptionType="System.ApplicationException, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
						</exceptionHandlers>
					</add>
				</exceptionTypes>
			</add>
		</exceptionPolicies>
	</exceptionHandling>

	<loggingConfiguration defaultCategory="Default Category" tracingEnabled="false">
		<logFilters>
			<add
				name="Category"
				type="Microsoft.Practices.EnterpriseLibrary.Logging.Filters.CategoryFilter, Microsoft.Practices.EnterpriseLibrary.Logging"
				categoryFilterMode="AllowAllExceptDenied">
				<categoryFilters />
			</add>
			<add
				name="Priority"
				type="Microsoft.Practices.EnterpriseLibrary.Logging.Filters.PriorityFilter, Microsoft.Practices.EnterpriseLibrary.Logging"
				minimumPriority="0"
					/>
		</logFilters>

		<categorySources>
			<add 
				name="Default Category"
				switchValue="All">
				<listeners>
					<add name="Event Log Destination" />
				</listeners>
			</add>
			<add 
				name="Tracing"
				switchValue="All">
				<listeners>
					<add name="Flat File Destination" />
				</listeners>
			</add>
		</categorySources>
    <specialSources>
      <errors name="errors" switchValue="All">
        <listeners>
          <add name="Event Log Destination"/>
        </listeners>
      </errors>
    </specialSources>
		<listeners>
			<add name="Event Log Destination" 
				type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FormattedEventLogTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging" 
				listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FormattedEventLogTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" 
				source ="Enterprise Library Logging" 
				formatter="Default Formatter"
				/>
			<add name="Flat File Destination" 
        type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging" 
				listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" 
				fileName ="trace.log" 
				/>
		</listeners>
		<formatters>
			<add
				name="Default Formatter"
				type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging"
				template="Timestamp: {timestamp}
Message: {message}
Category: {category}
Priority: {priority}
EventId: {eventid}
Severity: {severity}
Title:{title}
Machine: {machine}
Application Domain: {appDomain}
Process Id: {processId}
Process Name: {processName}
Win32 Thread Id: {win32ThreadId}
Thread Name: {threadName}
Extended Properties: {dictionary({key} - {value}
)}"
				/>
		</formatters>
	</loggingConfiguration>	
</configuration>